client := &http.Client{}
{%~ if uri matches '{upload}' %}
file, _ := os.Open("example.pdf")
defer file.Close()

body := &bytes.Buffer{}
writer := multipart.NewWriter(body)
part, _ := writer.CreateFormFile("file", "example.pdf")
io.Copy(part, file)
writer.Close()
{%~ elseif method in ['post', 'put', 'patch'] %}
jsonData := []byte(`{{ sample_data|json_encode(constant('JSON_PRETTY_PRINT'))|raw }}`)
{% endif ~%}
req, _ := http.NewRequest(
    "{{ method|upper }}",
    "{{ base_url }}{{ uri }}",
{% if uri matches '{upload}' %}
    body
{% elseif method in ['post', 'put', 'patch'] and sample_data is not empty %}
    bytes.NewBuffer(jsonData)
{% else %}
    nil
{% endif %}
)

{% if uri matches '{upload}' %}
req.Header.Add("Content-Type", writer.FormDataContentType())
{% else %}
req.Header.Add("Content-Type", "application/json")
{% endif %}

{% if security_enabled -%}
    {% if 'BearerToken' in security_schemes and 'BasicAuth' in security_schemes %}
req.Header.Add("Authorization", "Basic {{ basic_example }}") # Or with Bearer {{ bearer_example }}
    {%~ elseif 'BearerToken' in security_schemes %}
req.Header.Add("Authorization", "Bearer {{ bearer_example }}")
    {%~ elseif 'BasicAuth' in security_schemes %}
req.Header.Add("Authorization", "Bearer {{ basic_example }}")
    {%~ endif -%}
{% endif %}

resp, err := client.Do(req)
if err != nil {
    panic(err)
}
defer resp.Body.Close()

body, _ := ioutil.ReadAll(resp.Body)
fmt.Println(string(body))
